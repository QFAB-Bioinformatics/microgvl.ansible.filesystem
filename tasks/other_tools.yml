#Installs other command line only tools to the image.


  #create the other_tools directory under /mnt/galaxy or some such...
- name: Create other_tools directory
  file: dest="{{ galaxyFS_base_dir }}/other_tools" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

  #create a temporary modulesfiles directory
- name: Create temp modules files dir
  file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

  #Snippy - Torsten Seemann's bacterial variant caller.
- name: Snippy install
  git: repo=git://github.com/Victorian-Bioinformatics-Consortium/snippy dest="{{ galaxyFS_base_dir }}/other_tools/snippy" accept_hostkey=True
  sudo: yes
  sudo_user: ubuntu

- name: get snippy version
  shell: "{{ galaxyFS_base_dir }}/other_tools/snippy/bin/snippy --version 2>&1 | cut -f 2 -d ' '"
  register: snippy_version
  sudo: yes
  sudo_user: ubuntu

- name: make snippy module directory
  file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/snippy" owner=root group=root state=directory
  sudo: yes
  sudo_user: root

- name: copy snippy module file
  template: src=snippy_module.j2 dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/snippy/{{ snippy_version.stdout }}"
  sudo: yes
  sudo_user: root

  #Wombac - Torsten Seemann's bacterial phylogeny generator
# - name: Wombac install
#   git: repo=git://github.com/Victorian-Bioinformatics-Consortium/wombac dest="{{ galaxyFS_base_dir }}/other_tools/wombac" accept_hostkey=True
#   sudo: yes
#   sudo_user: ubuntu
#
# - name: get wombac version
#   shell: "{{ galaxyFS_base_dir }}/other_tools/wombac/bin/wombac --version 2>&1 | cut -f 2 -d ' '"
#   register: wombac_version
#
# - name: make wombac module dir
#   file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/wombac" owner=root group=root state=directory
#   sudo: yes
#   sudo_user: root
# - name: copy wombac module file
#   template: src=wombac_module.j2 dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/wombac/{{ wombac_version.stdout }}"
#   sudo: yes
#   sudo_user: root

  #Parnsp - Part of the Harvest suite of tools.
- name: Get Parnsp
  get_url: url=http://github.com/marbl/parsnp/releases/download/v1.2/parsnp-Linux64-v1.2.tar.gz dest=/tmp/parsnp-Linux64-v1.2.tar.gz
  sudo: yes
  sudo_user: ubuntu

- name: Extract parsnp
  unarchive: src=/tmp/parsnp-Linux64-v1.2.tar.gz dest=/tmp/ copy=no

- name: make parsnp module dir
  file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/parsnp" owner=root group=root state=directory
  sudo: yes
  sudo_user: root

- name: make parsnp dir
  file: dest="{{ galaxyFS_base_dir }}/other_tools/parsnp" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

- name: Copy parsnp file
  shell: "cp /tmp/Parsnp-Linux64-v1.2/parsnp {{ galaxyFS_base_dir }}/other_tools/parsnp/parsnp"
  sudo: yes
  sudo_user: root

- name: copy parsnp module file
  template: src=parsnp_module.j2 dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/parsnp/1.2"
  sudo: yes
  sudo_user: root


  #MLST - Torsten Seemann's MLST classifier
- name: MLST install (has a dependency of blat)
  git: repo=git://github.com/Victorian-Bioinformatics-Consortium/mlst dest="{{ galaxyFS_base_dir }}/other_tools/mlst" accept_hostkey=True
  sudo: yes
  sudo_user: ubuntu

#Get MLST only has one version.
- name: get mlst version
  shell: "{{ galaxyFS_base_dir }}/other_tools/mlst/bin/mlst --version 2>&1 | cut -f 2 -d ' '"
  register: mlst_version

- name: make mlst module dir
  file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/mlst" owner=root group=root state=directory
  sudo: yes
  sudo_user: root

- name: copy mlst module file
  template: src=mlst_module.j2 dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/mlst/{{ mlst_version.stdout }}"
  sudo: yes
  sudo_user: root

  #Put a blat executable into the MLST bin dir
- name: Blat install for MLST
  get_url: url=http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/blat/blat dest="{{ galaxyFS_base_dir }}/other_tools/mlst/bin" mode=0755
  sudo: yes
  sudo_user: ubuntu

  #Artemis
- name: Download Artemis genome browser
  get_url: url=ftp://ftp.sanger.ac.uk/pub/resources/software/artemis/artemis.tar.gz dest=/tmp/artemis.tar.gz
  sudo: yes
  sudo_user: root

- name: Make Artemis directory
  file: dest="{{ galaxyFS_base_dir }}/other_tools/artemis" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

- name: copy artemis to dir
  unarchive: src=/tmp/artemis.tar.gz dest="{{ galaxyFS_base_dir }}/other_tools/" copy=no
  sudo: yes
  sudo_user: root

- name: make artemis module dir
  file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/artemis" owner=root group=root state=directory
  sudo: yes
  sudo_user: root

- name: copy artemis module file
  template: src=artemis_module.j2 dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/artemis/16"
  sudo: yes
  sudo_user: root

#Bandage - Ryan Wick's Assembly graph viewer.
- name: Download bandage
  get_url: url=http://github.com/rrwick/Bandage/releases/download/v0.5.6/Bandage_Linux_static_v0.5.6.zip dest=/tmp/Bandage_Linux_static_v0.5.6.zip
  sudo: yes
  sudo_user: root

- name: make bandage directory
  file: dest="{{ galaxyFS_base_dir }}/other_tools/bandage" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

- name: unzip bandage
  unarchive: src=/tmp/Bandage_Linux_static_v0.5.6.zip dest="{{ galaxyFS_base_dir }}/other_tools/bandage/" copy=no
  sudo: yes
  sudo_user: root

- name: make bandage module directory
  file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/bandage" owner=root group=root state=directory
  sudo: yes
  sudo_user: root

- name: copy bandage module file
  template: src=bandage_module.j2 dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/bandage/0.5.6"
  sudo: yes
  sudo_user: root

  #Aaron Darling's mauve
- name: download Mauve
  get_url: url=http://darlinglab.org/mauve/snapshots/2015/2015-02-13/linux-x64/mauve_linux_snapshot_2015-02-13.tar.gz dest=/tmp/mauve.tar.gz
  sudo: yes
  sudo_user: root

- name: make mauve directory
  file: dest="{{ galaxyFS_base_dir }}/other_tools/mauve" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

- name: unzip mauve
  unarchive: src=/tmp/mauve.tar.gz dest="{{ galaxyFS_base_dir }}/other_tools/mauve/" copy=no
  sudo: yes
  sudo_user: root

- name: make mauve module directory
  file: dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/mauve" owner=root group=root state=directory
  sudo: yes
  sudo_user: root

- name: copy bandage module file
  template: src=mauve_module.j2 dest="{{ galaxyFS_base_dir }}/other_tools/modulesfiles/mauve/15.02.2015"
  sudo: yes
  sudo_user: root

  #Make the .sh script that will copy the modules files to the correct location.
- name: Make script to copy the modules files to the correct place.
  template: src=copy_modules.j2 dest="{{ galaxyFS_base_dir }}/gvl/poststart.d/copy_modules" mode=0755 owner="ubuntu"
  sudo: yes
  sudo_user: root
