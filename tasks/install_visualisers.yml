#
# Script to install genome Visualisers etc. (Artemis, IGV, Mauve and Bandage)
#

#Artemis
- name: Download Artemis genome browser
  get_url: url=ftp://ftp.sanger.ac.uk/pub/resources/software/artemis/artemis.tar.gz dest="{{ gvl_tmp_path }}/artemis.tar.gz"
  sudo: yes
  sudo_user: root

- name: Make Artemis directory
  file: dest="{{ gvl_app_path }}/artemis" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

- name: copy artemis to dir
  unarchive: src="{{ gvl_tmp_path }}/artemis.tar.gz" dest="{{ gvl_app_path }}" copy=no
  sudo: yes
  sudo_user: root

#Bandage - Ryan Wick's Assembly graph viewer.
- name: Download bandage
  get_url: url="https://github.com/rrwick/Bandage/releases/download/v0.8.0/Bandage_Ubuntu_dynamic_v0_8_0.zip" dest="{{ gvl_tmp_path }}/Bandage_Ubuntu_dynamic_v0_8_0.zip"
  sudo: yes
  sudo_user: root

- name: make bandage directory
  file: dest="{{ gvl_app_path }}/bandage" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

- name: unzip bandage
  unarchive: src="{{ gvl_tmp_path }}/Bandage_Ubuntu_dynamic_v0_8_0.zip" dest="{{ gvl_app_path }}/bandage/" copy=no
  sudo: yes
  sudo_user: root

#Aaron Darling's mauve
- name: download Mauve
  get_url: url=http://darlinglab.org/mauve/snapshots/2015/2015-02-13/linux-x64/mauve_linux_snapshot_2015-02-13.tar.gz dest="{{ gvl_tmp_path }}/mauve.tar.gz"
  sudo: yes
  sudo_user: root

- name: make mauve directory
  file: dest="{{ gvl_app_path }}/mauve" owner=ubuntu group=ubuntu state=directory
  sudo: yes
  sudo_user: root

- name: unzip mauve
  unarchive: src="{{ gvl_tmp_path }}/mauve.tar.gz" dest="{{ gvl_app_path }}/mauve" copy=no
  sudo: yes
  sudo_user: root

#IGV

- name: Download IGV from the object store
  get_url: url="https://swift.rc.nectar.org.au:8888/v1/AUTH_377/public/IGV_2.3.67.zip" dest="{{ gvl_tmp_path }}/IGV_2.3.67.zip"
  sudo: yes
  sudo_user: root

- name: make an IGV directory
  file: dest="{{ gvl_app_path }}/IGV" state=directory owner=ubuntu
  sudo: yes
  sudo_user: ubuntu

- name: Unarchive IGV to app_dir
  unarchive: src="{{ gvl_tmp_path }}/IGV_2.3.67.zip" dest="{{ gvl_app_path }}/IGV" copy=no
  sudo: yes
  sudo_user: root

#ete3

- name: Download the ete3 toolkit and install it.
  get_url: url="http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh" dest="{{ gvl_tmp_path }}/Miniconda-latest-Linux-x86_64.sh"
  sudo: yes
  sudo_user: ubuntu

- name: make the anaconda for ete3
  command: bash Miniconda-latest-Linux-x86_64.sh -b -p "{{ gvl_app_path }}"/anaconda_ete/
  sudo: yes
  sudo_user: ubuntu

- name: install ete3 and associated condas
  command: conda install -c etetoolkit ete3 ete3_external_apps
  sudo: yes
  sudo_user: ubuntu
  environment:
    PATH: "{{ gvl_app_path }}/anaconda_ete/bin:{{ ansible_env.PATH }}"

- name: Create a directory for the ete3 modulefile
  file: dest="{{ gvl_app_path }}/scripts/modulefiles/ete3" state=directory owner=ubuntu group=ubuntu
  sudo: yes
  sudo_user: ubuntu

- name: Copy the ete3 module file to the temp script dir.
  template: src=ete3.j2 dest="{{ gvl_app_path }}/scripts/modulefiles/ete3/3.0.0b35"
  sudo: yes
  sudo_user: ubuntu

# copy the visualiser env file to the temp scripts dir.

- name: Copy the visualisers environment file to the temp scripts dir.
  template: src="visualiser-paths.j2" dest="{{ gvl_app_path }}/scripts/visualiser-paths.sh"
  sudo: yes
  sudo_user: ubuntu
